// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class HatsContractChanged extends ethereum.Event {
  get params(): HatsContractChanged__Params {
    return new HatsContractChanged__Params(this);
  }
}

export class HatsContractChanged__Params {
  _event: HatsContractChanged;

  constructor(event: HatsContractChanged) {
    this._event = event;
  }

  get previousHatsContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newHatsContract(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewRiteOfMoloch extends ethereum.Event {
  get params(): NewRiteOfMoloch__Params {
    return new NewRiteOfMoloch__Params(this);
  }
}

export class NewRiteOfMoloch__Params {
  _event: NewRiteOfMoloch;

  constructor(event: NewRiteOfMoloch) {
    this._event = event;
  }

  get cohortContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get deployer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get implementation(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get membershipCriteria(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get stakingAsset(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get treasury(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get threshold(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get assetAmount(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get stakeDuration(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get sbtUrl(): string {
    return this._event.parameters[9].value.toString();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get hat(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleHatChanged extends ethereum.Event {
  get params(): RoleHatChanged__Params {
    return new RoleHatChanged__Params(this);
  }
}

export class RoleHatChanged__Params {
  _event: RoleHatChanged;

  constructor(event: RoleHatChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousRoleHat(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newRoleHat(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get hat(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RiteOfMolochFactory__createCohortInputInitDataStruct extends ethereum.Tuple {
  get value0(): Address {
    return this[0].toAddress();
  }

  get value1(): Address {
    return this[1].toAddress();
  }

  get value2(): Address {
    return this[2].toAddress();
  }

  get value3(): Address {
    return this[3].toAddress();
  }

  get value4(): Address {
    return this[4].toAddress();
  }

  get value5(): BigInt {
    return this[5].toBigInt();
  }

  get value6(): BigInt {
    return this[6].toBigInt();
  }

  get value7(): BigInt {
    return this[7].toBigInt();
  }

  get value8(): BigInt {
    return this[8].toBigInt();
  }

  get value9(): BigInt {
    return this[9].toBigInt();
  }

  get value10(): BigInt {
    return this[10].toBigInt();
  }

  get value11(): string {
    return this[11].toString();
  }

  get value12(): string {
    return this[12].toString();
  }

  get value13(): string {
    return this[13].toString();
  }

  get value14(): string {
    return this[14].toString();
  }

  get value15(): boolean {
    return this[15].toBoolean();
  }
}

export class RiteOfMolochFactory extends ethereum.SmartContract {
  static bind(address: Address): RiteOfMolochFactory {
    return new RiteOfMolochFactory("RiteOfMolochFactory", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FACTORY_OPERATOR(): Bytes {
    let result = super.call(
      "FACTORY_OPERATOR",
      "FACTORY_OPERATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_FACTORY_OPERATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "FACTORY_OPERATOR",
      "FACTORY_OPERATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createCohort(
    initData: RiteOfMolochFactory__createCohortInputInitDataStruct,
    implementationSelector: BigInt
  ): Address {
    let result = super.call(
      "createCohort",
      "createCohort((address,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,string,string,string,string,bool),uint256):(address)",
      [
        ethereum.Value.fromTuple(initData),
        ethereum.Value.fromUnsignedBigInt(implementationSelector)
      ]
    );

    return result[0].toAddress();
  }

  try_createCohort(
    initData: RiteOfMolochFactory__createCohortInputInitDataStruct,
    implementationSelector: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createCohort",
      "createCohort((address,address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,string,string,string,string,bool),uint256):(address)",
      [
        ethereum.Value.fromTuple(initData),
        ethereum.Value.fromUnsignedBigInt(implementationSelector)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  factoryOperatorHat(): BigInt {
    let result = super.call(
      "factoryOperatorHat",
      "factoryOperatorHat():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_factoryOperatorHat(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "factoryOperatorHat",
      "factoryOperatorHat():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hatsContract(): Address {
    let result = super.call("hatsContract", "hatsContract():(address)", []);

    return result[0].toAddress();
  }

  try_hatsContract(): ethereum.CallResult<Address> {
    let result = super.tryCall("hatsContract", "hatsContract():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hatsProtocol(): Address {
    let result = super.call("hatsProtocol", "hatsProtocol():(address)", []);

    return result[0].toAddress();
  }

  try_hatsProtocol(): ethereum.CallResult<Address> {
    let result = super.tryCall("hatsProtocol", "hatsProtocol():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  iid(): BigInt {
    let result = super.call("iid", "iid():(uint256)", []);

    return result[0].toBigInt();
  }

  try_iid(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("iid", "iid():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  implementations(param0: BigInt): Address {
    let result = super.call(
      "implementations",
      "implementations(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_implementations(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementations",
      "implementations(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sustainabilityFee(): BigInt {
    let result = super.call(
      "sustainabilityFee",
      "sustainabilityFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_sustainabilityFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sustainabilityFee",
      "sustainabilityFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sustainabilityTreasury(): Address {
    let result = super.call(
      "sustainabilityTreasury",
      "sustainabilityTreasury():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_sustainabilityTreasury(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "sustainabilityTreasury",
      "sustainabilityTreasury():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddImplementationCall extends ethereum.Call {
  get inputs(): AddImplementationCall__Inputs {
    return new AddImplementationCall__Inputs(this);
  }

  get outputs(): AddImplementationCall__Outputs {
    return new AddImplementationCall__Outputs(this);
  }
}

export class AddImplementationCall__Inputs {
  _call: AddImplementationCall;

  constructor(call: AddImplementationCall) {
    this._call = call;
  }

  get implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddImplementationCall__Outputs {
  _call: AddImplementationCall;

  constructor(call: AddImplementationCall) {
    this._call = call;
  }
}

export class ChangeHatsContractCall extends ethereum.Call {
  get inputs(): ChangeHatsContractCall__Inputs {
    return new ChangeHatsContractCall__Inputs(this);
  }

  get outputs(): ChangeHatsContractCall__Outputs {
    return new ChangeHatsContractCall__Outputs(this);
  }
}

export class ChangeHatsContractCall__Inputs {
  _call: ChangeHatsContractCall;

  constructor(call: ChangeHatsContractCall) {
    this._call = call;
  }

  get newHatsContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeHatsContractCall__Outputs {
  _call: ChangeHatsContractCall;

  constructor(call: ChangeHatsContractCall) {
    this._call = call;
  }
}

export class ChangeHatsProtocolCall extends ethereum.Call {
  get inputs(): ChangeHatsProtocolCall__Inputs {
    return new ChangeHatsProtocolCall__Inputs(this);
  }

  get outputs(): ChangeHatsProtocolCall__Outputs {
    return new ChangeHatsProtocolCall__Outputs(this);
  }
}

export class ChangeHatsProtocolCall__Inputs {
  _call: ChangeHatsProtocolCall;

  constructor(call: ChangeHatsProtocolCall) {
    this._call = call;
  }

  get _hatsProtocol(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeHatsProtocolCall__Outputs {
  _call: ChangeHatsProtocolCall;

  constructor(call: ChangeHatsProtocolCall) {
    this._call = call;
  }
}

export class ChangeRoleHatCall extends ethereum.Call {
  get inputs(): ChangeRoleHatCall__Inputs {
    return new ChangeRoleHatCall__Inputs(this);
  }

  get outputs(): ChangeRoleHatCall__Outputs {
    return new ChangeRoleHatCall__Outputs(this);
  }
}

export class ChangeRoleHatCall__Inputs {
  _call: ChangeRoleHatCall;

  constructor(call: ChangeRoleHatCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get newRoleHat(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ChangeRoleHatCall__Outputs {
  _call: ChangeRoleHatCall;

  constructor(call: ChangeRoleHatCall) {
    this._call = call;
  }
}

export class CreateCohortCall extends ethereum.Call {
  get inputs(): CreateCohortCall__Inputs {
    return new CreateCohortCall__Inputs(this);
  }

  get outputs(): CreateCohortCall__Outputs {
    return new CreateCohortCall__Outputs(this);
  }
}

export class CreateCohortCall__Inputs {
  _call: CreateCohortCall;

  constructor(call: CreateCohortCall) {
    this._call = call;
  }

  get initData(): CreateCohortCallInitDataStruct {
    return changetype<CreateCohortCallInitDataStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get implementationSelector(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateCohortCall__Outputs {
  _call: CreateCohortCall;

  constructor(call: CreateCohortCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateCohortCallInitDataStruct extends ethereum.Tuple {
  get value0(): Address {
    return this[0].toAddress();
  }

  get value1(): Address {
    return this[1].toAddress();
  }

  get value2(): Address {
    return this[2].toAddress();
  }

  get value3(): Address {
    return this[3].toAddress();
  }

  get value4(): Address {
    return this[4].toAddress();
  }

  get value5(): BigInt {
    return this[5].toBigInt();
  }

  get value6(): BigInt {
    return this[6].toBigInt();
  }

  get value7(): BigInt {
    return this[7].toBigInt();
  }

  get value8(): BigInt {
    return this[8].toBigInt();
  }

  get value9(): BigInt {
    return this[9].toBigInt();
  }

  get value10(): BigInt {
    return this[10].toBigInt();
  }

  get value11(): string {
    return this[11].toString();
  }

  get value12(): string {
    return this[12].toString();
  }

  get value13(): string {
    return this[13].toString();
  }

  get value14(): string {
    return this[14].toString();
  }

  get value15(): boolean {
    return this[15].toBoolean();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get hat(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get hat(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UpdateSustainabilityFeeCall extends ethereum.Call {
  get inputs(): UpdateSustainabilityFeeCall__Inputs {
    return new UpdateSustainabilityFeeCall__Inputs(this);
  }

  get outputs(): UpdateSustainabilityFeeCall__Outputs {
    return new UpdateSustainabilityFeeCall__Outputs(this);
  }
}

export class UpdateSustainabilityFeeCall__Inputs {
  _call: UpdateSustainabilityFeeCall;

  constructor(call: UpdateSustainabilityFeeCall) {
    this._call = call;
  }

  get fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateSustainabilityFeeCall__Outputs {
  _call: UpdateSustainabilityFeeCall;

  constructor(call: UpdateSustainabilityFeeCall) {
    this._call = call;
  }
}

export class UpdateSustainabilityTreasuryCall extends ethereum.Call {
  get inputs(): UpdateSustainabilityTreasuryCall__Inputs {
    return new UpdateSustainabilityTreasuryCall__Inputs(this);
  }

  get outputs(): UpdateSustainabilityTreasuryCall__Outputs {
    return new UpdateSustainabilityTreasuryCall__Outputs(this);
  }
}

export class UpdateSustainabilityTreasuryCall__Inputs {
  _call: UpdateSustainabilityTreasuryCall;

  constructor(call: UpdateSustainabilityTreasuryCall) {
    this._call = call;
  }

  get treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateSustainabilityTreasuryCall__Outputs {
  _call: UpdateSustainabilityTreasuryCall;

  constructor(call: UpdateSustainabilityTreasuryCall) {
    this._call = call;
  }
}
